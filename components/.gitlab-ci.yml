test_components:
  extends: .test_yarn_workspace
  rules:
    - !reference [.ingore_release_mrs, rules]
    - if: !reference [.run_for_changes_on_main, rules, if]
      changes:
        - $ROOT_DIR/**/*
        - jest/**/*
        - yarn.lock
    - if: !reference [.run_for_changes_on_mr, rules, if]
      changes:
        - $ROOT_DIR/**/*
        - jest/**/*
        - yarn.lock
  variables:
    WORKSPACE: "@bmi/components"
    ROOT_DIR: "components"

build_components:
  extends: .build_yarn_workspace
  rules:
    - !reference [.ingore_release_mrs, rules]
    - !reference [.run_for_changes_on_main, rules]
  variables:
    WORKSPACE: "@bmi/components"
    ROOT_DIR: "components"

build_styleguide:
  extends: .build_yarn_workspace
  rules:
    - !reference [.ingore_release_mrs, rules]
    - !reference [.run_for_changes_on_main, rules]
  variables:
    ROOT_DIR: components
    WORKSPACE: "@bmi/components"
  script:
    - yarn workspace @bmi/components workbench:build
  artifacts:
    paths:
      - components/styleguide

deploy_styleguide:
  stage: deploy
  variables:
    FIREBASE_TARGET: "styleguide"
  rules:
    - if: !reference [.run_for_changes_on_main, rules, if]
      changes:
        - components/**/*
  needs:
    - build_styleguide
  before_script:
    - yarn config set cache-folder ~/.yarn
  script:
    - |
      npm install -g firebase-tools
      firebase use $STYLE_GUIDE_FIREBASE_PROJECT_ID
      DEPLOY_RESULT=$(firebase deploy -m "Commit ID: $CI_COMMIT_SHA" --only hosting:$FIREBASE_TARGET --non-interactive) || exit 0
      echo ${DEPLOY_RESULT}
