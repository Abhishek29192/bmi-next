image: node:12

test_components:
  stage: test
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - components/**/*
        - jest/**/*
        - package.json
        - "**/package.json"
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn coverage:components
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

test_mr_coverage_components:
  stage: test
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'"
      changes:
        - components/**/*
        - jest/**/*
        - package.json
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - git fetch origin master
    - yarn coverage:components --changed-since=origin/master --coverage-threshold='{"global":{"statements":"80","branches":"80","functions":"80","lines":"80"}}'
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

build_components:
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - components/**/*
        - package.json
        - "**/package.json"
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script: |
    for component in $(ls components | grep -v -e '^jest.config.js$' -e '^README.md$') # Having to use grep as OSX doesn't have --ignore/-I
    do
      echo "${component}"
      yarn workspace @bmi/${component} tsc
    done

build_styleguide:
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'"
      changes:
        - components/**/*
        - package.json
        - "**/package.json"
  needs:
    - install
  before_script:
    - yarn config set cache-folder ~/.yarn
  script:
    - yarn styleguidist build
  artifacts:
    paths:
      - styleguide

deploy_styleguide:
  stage: deploy
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'"
      changes:
        - components/**/*
  needs:
    - build_styleguide
  before_script:
    - yarn config set cache-folder ~/.yarn
    - apt-get update
    - apt-get install -y jq
  script:
    - |
      DEPLOY_RESULT=$(npx netlify deploy --dir styleguide --site "${NETLIFY_STYLEGUIDE_SITE_ID}" --auth "${NETLIFY_AUTH_TOKEN}" --json) || exit 0
      echo ${DEPLOY_RESULT}
      curl --request POST --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}" -H "Content-Type: application/json" \
        -d "{\"body\":\"Deployed to: $(echo ${DEPLOY_RESULT} | jq -r '.deploy_url')\"}" \
        "https://gitlab.com/api/v4/projects/19163612/merge_requests/${CI_MERGE_REQUEST_IID}/notes"
