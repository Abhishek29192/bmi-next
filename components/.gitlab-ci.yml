test_components:
  stage: test
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master' || ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'pre-production' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != 'master')) || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - components/**/*
        - jest/**/*
        - package.json
        - "**/package.json"
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn coverage:components
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

test_mr_coverage_components:
  stage: test
  allow_failure: true
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'"
      changes:
        - components/**/*
        - jest/**/*
        - package.json
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - git fetch origin master
    - yarn coverage:components --changed-since=origin/master --coverage-threshold='{"global":{"statements":"80","branches":"80","functions":"80","lines":"80"}}'
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

build_components:
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master' || ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'pre-production' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != 'master')) || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - components/**/*
        - package.json
        - "**/package.json"
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script: |
    for component in $(find components -type f -name 'package.json' | sed -r 's/components\/([a-zA-Z0-9\-]*)\/.*/\1/' | uniq | sort)
    do
      echo "${component}"
      yarn workspace @bmi/${component} tsc
    done

build_styleguide:
  stage: build
  rules:
    - if: "($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master') || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - components/**/*
        - package.json
        - "**/package.json"
  needs:
    - install
  before_script:
    - yarn config set cache-folder ~/.yarn
  script:
    - yarn styleguidist build
  artifacts:
    paths:
      - styleguide

deploy_styleguide:
  stage: deploy
  variables: 
    FIREBASE_TARGET: "styleguide"
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master'"
      changes:
        - components/**/*
  needs:
    - build_styleguide
  before_script:
    - yarn config set cache-folder ~/.yarn
    - npm install -g firebase-tools
    - firebase use $STYLE_GUIDE_FIREBASE_PROJECT_ID
  script:
    - |      
      DEPLOY_RESULT=$(firebase deploy -m "Commit ID: $CI_COMMIT_SHA" --only hosting:$FIREBASE_TARGET --non-interactive) || exit 0
      echo ${DEPLOY_RESULT}
