# Pipeline times are a lot quicker with this split out, but uses way more GitLab minutes
# include:
#   - local: "/components/accordion/.gitlab-ci.yml"
#   - local: "/components/alert-banner/.gitlab-ci.yml"
#   - local: "/components/alternative-content/.gitlab-ci.yml"
#   - local: "/components/anchor-link/.gitlab-ci.yml"
#   - local: "/components/arrow-control/.gitlab-ci.yml"
#   - local: "/components/autocomplete/.gitlab-ci.yml"
#   - local: "/components/back-to-top/.gitlab-ci.yml"
#   - local: "/components/brand-intro-card/.gitlab-ci.yml"
#   - local: "/components/breadcrumbs/.gitlab-ci.yml"
#   - local: "/components/bullets/.gitlab-ci.yml"
#   - local: "/components/button/.gitlab-ci.yml"
#   - local: "/components/calculator-modal/.gitlab-ci.yml"
#   - local: "/components/calculator-stepper/.gitlab-ci.yml"
#   - local: "/components/card/.gitlab-ci.yml"
#   - local: "/components/card-checkbox-group/.gitlab-ci.yml"
#   - local: "/components/card-input/.gitlab-ci.yml"
#   - local: "/components/card-radio-group/.gitlab-ci.yml"
#   - local: "/components/carousel/.gitlab-ci.yml"
#   - local: "/components/checkbox/.gitlab-ci.yml"
#   - local: "/components/chip/.gitlab-ci.yml"
#   - local: "/components/clickable/.gitlab-ci.yml"
#   - local: "/components/color-pair/.gitlab-ci.yml"
#   - local: "/components/company-details/.gitlab-ci.yml"
#   - local: "/components/configurator-panel/.gitlab-ci.yml"
#   - local: "/components/container/.gitlab-ci.yml"
#   - local: "/components/container-dialog/.gitlab-ci.yml"
#   - local: "/components/cta-card/.gitlab-ci.yml"
#   - local: "/components/dialog/.gitlab-ci.yml"
#   - local: "/components/download-list/.gitlab-ci.yml"
#   - local: "/components/equal-heights/.gitlab-ci.yml"
#   - local: "/components/expandable-card/.gitlab-ci.yml"
#   - local: "/components/expandable-links-text-card/.gitlab-ci.yml"
#   - local: "/components/explore-bar/.gitlab-ci.yml"
#   - local: "/components/filters/.gitlab-ci.yml"
#   - local: "/components/flat-roof-calculator/.gitlab-ci.yml"
#   - local: "/components/footer/.gitlab-ci.yml"
#   - local: "/components/form/.gitlab-ci.yml"
#   - local: "/components/geolocation-button/.gitlab-ci.yml"
#   - local: "/components/google-api/.gitlab-ci.yml"
#   - local: "/components/google-autocomplete/.gitlab-ci.yml"
#   - local: "/components/google-map/.gitlab-ci.yml"
#   - local: "/components/grid/.gitlab-ci.yml"
#   - local: "/components/header/.gitlab-ci.yml"
#   - local: "/components/hero/.gitlab-ci.yml"
#   - local: "/components/hide-print/.gitlab-ci.yml"
#   - local: "/components/icon/.gitlab-ci.yml"
#   - local: "/components/icon-list/.gitlab-ci.yml"
#   - local: "/components/image-gallery/.gitlab-ci.yml"
#   - local: "/components/input-banner/.gitlab-ci.yml"
#   - local: "/components/input-group/.gitlab-ci.yml"
#   - local: "/components/language-selection/.gitlab-ci.yml"
#   - local: "/components/lead-block/.gitlab-ci.yml"
#   - local: "/components/link-card/.gitlab-ci.yml"
#   - local: "/components/location-card/.gitlab-ci.yml"
#   - local: "/components/logo/.gitlab-ci.yml"
#   - local: "/components/masonry-grid/.gitlab-ci.yml"
#   - local: "/components/media/.gitlab-ci.yml"
#   - local: "/components/micro-copy/.gitlab-ci.yml"
#   - local: "/components/navigation/.gitlab-ci.yml"
#   - local: "/components/nba-card/.gitlab-ci.yml"
#   - local: "/components/overview-card/.gitlab-ci.yml"
#   - local: "/components/pagination/.gitlab-ci.yml"
#   - local: "/components/perfect-scrollbar/.gitlab-ci.yml"
#   - local: "/components/pitched-roof-calculator/.gitlab-ci.yml"
#   - local: "/components/post-it-card/.gitlab-ci.yml"
#   - local: "/components/product-details-card/.gitlab-ci.yml"
#   - local: "/components/product-overview/.gitlab-ci.yml"
#   - local: "/components/profile-card/.gitlab-ci.yml"
#   - local: "/components/promo-section/.gitlab-ci.yml"
#   - local: "/components/quantity-table/.gitlab-ci.yml"
#   - local: "/components/radio-button/.gitlab-ci.yml"
#   - local: "/components/radio-group/.gitlab-ci.yml"
#   - local: "/components/radio-pane/.gitlab-ci.yml"
#   - local: "/components/raw-text-field/.gitlab-ci.yml"
#   - local: "/components/response-message/.gitlab-ci.yml"
#   - local: "/components/roller-selector/.gitlab-ci.yml"
#   - local: "/components/search/.gitlab-ci.yml"
#   - local: "/components/section/.gitlab-ci.yml"
#   - local: "/components/select/.gitlab-ci.yml"
#   - local: "/components/share-widget/.gitlab-ci.yml"
#   - local: "/components/show-more/.gitlab-ci.yml"
#   - local: "/components/slide-controls/.gitlab-ci.yml"
#   - local: "/components/spotlight-hero/.gitlab-ci.yml"
#   - local: "/components/table/.gitlab-ci.yml"
#   - local: "/components/table-of-contents/.gitlab-ci.yml"
#   - local: "/components/tabs/.gitlab-ci.yml"
#   - local: "/components/text-field/.gitlab-ci.yml"
#   - local: "/components/theme-provider/.gitlab-ci.yml"
#   - local: "/components/thumb-scroller-button/.gitlab-ci.yml"
#   - local: "/components/thumbnail/.gitlab-ci.yml"
#   - local: "/components/tile-list/.gitlab-ci.yml"
#   - local: "/components/toggle-card/.gitlab-ci.yml"
#   - local: "/components/tooltip/.gitlab-ci.yml"
#   - local: "/components/truncate/.gitlab-ci.yml"
#   - local: "/components/two-pane-carousel/.gitlab-ci.yml"
#   - local: "/components/typography/.gitlab-ci.yml"
#   - local: "/components/up-down-simple-numeric-input/.gitlab-ci.yml"
#   - local: "/components/upload/.gitlab-ci.yml"
#   - local: "/components/vertical-roller/.gitlab-ci.yml"
#   - local: "/components/villain/.gitlab-ci.yml"
#   - local: "/components/visualiser/.gitlab-ci.yml"
#   - local: "/components/youtube-video/.gitlab-ci.yml"

test_components:
  stage: test
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master' || ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'pre-production' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != 'master')) || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - components/**/*
        - jest/**/*
        - yarn.lock
  needs:
    - job: install
      optional: true
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn coverage:components
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

test_mr_coverage_components:
  stage: test
  image: !reference [.node-full-image, image]
  allow_failure: true
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'"
      changes:
        - components/**/*
  needs:
    - job: install
      optional: true
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - git fetch origin master
    - yarn coverage:components --changed-since=origin/master --coverage-threshold='{"global":{"statements":"80","branches":"80","functions":"80","lines":"80"}}'
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

build_components:
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master' || ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'pre-production' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != 'master')) || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - components/**/*
        - yarn.lock
  needs:
    - job: install
      optional: true
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script: |
    for component in $(find components -type f -name 'package.json' | sed -r 's/components\/([a-zA-Z0-9\-]*)\/.*/\1/' | uniq | sort)
    do
      echo "${component}"
      yarn workspace @bmi/${component} check:ts
    done

build_styleguide:
  stage: build
  rules:
    - if: "($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master') || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - components/**/*
        - yarn.lock
  needs:
    - job: install
      optional: true
  before_script:
    - yarn config set cache-folder ~/.yarn
  script:
    - yarn styleguidist build
  artifacts:
    paths:
      - styleguide

deploy_styleguide:
  stage: deploy
  variables:
    FIREBASE_TARGET: "styleguide"
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master'"
      changes:
        - components/**/*
  needs:
    - build_styleguide
  before_script:
    - yarn config set cache-folder ~/.yarn
    - npm install -g firebase-tools
    - firebase use $STYLE_GUIDE_FIREBASE_PROJECT_ID
  script:
    - |
      DEPLOY_RESULT=$(firebase deploy -m "Commit ID: $CI_COMMIT_SHA" --only hosting:$FIREBASE_TARGET --non-interactive) || exit 0
      echo ${DEPLOY_RESULT}
