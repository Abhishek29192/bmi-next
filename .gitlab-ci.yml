include:
  - project: "$CI_PROJECT_NAMESPACE/gitlab-templates"
    file: "general.gitlab-ci.yml"
  - project: "$CI_PROJECT_NAMESPACE/gitlab-templates"
    file: "dependabot.gitlab-ci.yml"
  - project: "$CI_PROJECT_NAMESPACE/gitlab-templates"
    file: "yarn.gitlab-ci.yml"
  - local: "/applications/frc-website/.gitlab-ci.yml"
  - local: "/applications/dxb/.gitlab-ci.yml"
  - local: "/applications/redirects-website/.gitlab-ci.yml"
  - local: "/applications/redirects-website-fr-siplast/.gitlab-ci.yml"
  - local: "/applications/redirects-website-fr-monier/.gitlab-ci.yml"
  - local: "/applications/redirects-website-italy/.gitlab-ci.yml"
  - local: "/applications/redirects-website-nl-icopal/.gitlab-ci.yml"
  - local: "/applications/redirects-website-nl-monier/.gitlab-ci.yml"
  - local: "/applications/redirects-website-uk-redland/.gitlab-ci.yml"
  - local: "/applications/redirects-website-uk-icopal/.gitlab-ci.yml"
  - local: "/applications/redirects-website-ie-necoflex/.gitlab-ci.yml"
  - local: "/applications/redirects-website-ba/.gitlab-ci.yml"
  - local: "/applications/redirects-website-pt-es-blogs/.gitlab-ci.yml"
  - local: "/applications/redirects-website-rs/.gitlab-ci.yml"
  - local: "/applications/redirects-website-hr/.gitlab-ci.yml"
  - local: "/applications/redirects-website-si/.gitlab-ci.yml"
  - local: "/applications/redirects-website-al/.gitlab-ci.yml"
  - local: "/applications/redirects-website-dk/.gitlab-ci.yml"
  - local: "/applications/redirects-website-cn/.gitlab-ci.yml"

# Latest version requires lhci >= 0.12.0, but it requires yarn 1.22.19 and node >= 16, which breaks licensefinder (stuck on node 14)
.cypress-image:
  image: cypress/browsers:node14.17.0-chrome91-ff89

variables:
  ARTIFACT_COMPRESSION_LEVEL: fastest
  CACHE_COMPRESSION_LEVEL: fastest
  FF_USE_FASTZIP: "false"
  NODE_OPTIONS: --max-old-space-size=2560
  POSTGRES_DB: custom_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: custom_pass
  POSTGRES_HOST_AUTH_METHOD: trust
  # There are a coupld of .java files under node_modules which sometimes triggers spotbugs checks
  SAST_EXCLUDED_ANALYZERS: flawfinder spotbugs
  TRANSFER_METER_FREQUENCY: 5s

.ingore_release_mrs:
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'master' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'pre-production'"
      when: never
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'pre-production' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'"
      when: never
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'pre-production' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'production'"
      when: never
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'production' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'pre-production'"
      when: never

.run_for_preprod_release:
  rules:
    if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+-alpha\.[0-9]+$/'

.run_for_prod_release:
  rules:
    if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'

install_yarn:
  rules:
    - !reference [ .ingore_release_mrs, rules ]
    - if: !reference [ .run_for_changes_on_main, rules, if ]
      changes:
        - modules-sha
    - if: !reference [ .run_for_changes_on_mr, rules, if ]
      changes:
        - modules-sha
    - if: '$WHICH_SCHEDULE == "install_yarn"'

code_quality:
  rules:
    - !reference [ .ingore_release_mrs, rules ]
    - if: !reference [ .run_for_changes_on_mr, rules, if ]
    - if: !reference [ .run_for_changes_on_main, rules, if ]

eslint-sast:
  rules:
    - when: never

nodejs-scan-sast:
  rules:
    - when: never

semgrep-sast:
  rules:
    - when: never

lint_yarn:
  rules:
    - !reference [ .ingore_release_mrs, rules ]
    - if: !reference [ .run_for_changes_on_mr, rules, if ]
    - if: !reference [ .run_for_changes_on_main, rules, if ]

secret_detection:
  rules:
    - !reference [ .ingore_release_mrs, rules ]
    - if: !reference [ .run_for_changes_on_mr, rules, if ]
    - if: !reference [ .run_for_changes_on_main, rules, if ]

update_dependabot_config:
  stage: audit
  rules:
    - when: never # Enable when we have dependabot setup
  #    - if: ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')
  needs: [ ]
  image: bash:latest
  cache: { }
  script:
    - scripts/create_dependabot_file.sh

release:
  stage: release
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && ($CI_COMMIT_BRANCH == 'pre-production' || $CI_COMMIT_BRANCH == 'production')"
  needs: [ ]
  cache: { }
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn run semantic-release

auto_merge:
  stage: post deploy
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - chmod +x scripts/auto_merge.sh
    - scripts/auto_merge.sh
  artifacts:
    reports:
      dotenv: post_deploy.env

open_mr_preprod_to_master:
  image: registry.gitlab.com/gitlab-automation-toolkit/gitlab-auto-mr
  stage: post deploy
  needs:
    - auto_merge
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      if [ "$PREPROD_MR" == "true" ];
        then
        gitlab_auto_mr --private-token $TOKEN_AUTO_MERGE --source-branch pre-production -t master -c "Backdown MR"
      else
        echo "No need to open merge request for pre-production"
      fi

open_mr_prod_to_preprod_to_master:
  image: registry.gitlab.com/gitlab-automation-toolkit/gitlab-auto-mr
  stage: post deploy
  needs:
    - auto_merge
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      if [ "$PROD_MR" == "true" ];
        then
        gitlab_auto_mr --private-token $TOKEN_AUTO_MERGE --source-branch production -t pre-production -c "Backdown MR"
        gitlab_auto_mr --private-token $TOKEN_AUTO_MERGE --source-branch pre-production -t master -c "Backdown MR"
      else
        echo "No need to open merge request for production"
      fi

environment_definer:
  stage: post deploy
  rules:
    - if: !reference [ .run_for_prod_release, rules, if ]
  when: manual
  script:
    - |
      if [[ "$CI_COMMIT_TAG" =~ $DXB_RELEASE_TAG_FORMAT_PROD ]]; 
      then
        echo "Production release -> $CI_COMMIT_TAG"
        echo "env -> prod"
        echo "env=prod" > auto_test.env
      else
        echo "Something went wrong: the release type is unknown"
        exit 1
      fi
  artifacts:
    reports:
      dotenv: auto_test.env

.auto_tests:
  stage: post deploy
  rules:
    - if: !reference [ .run_for_prod_release, rules, if ]
  variables:
    project: $market
    browser: $browser
    market: $market
    smoke: $smoke
    env: $env
    tag: $tag
  script:
    - |
      apt-get update
      apt-get install -y jq

      red='\033[41m'
      green='\033[0;92m'
      blue='\033[0;94m'
      nc='\033[0m'
      printf "${blue} Triggering remote pipeline ${nc}${green}\n"

      curl -X POST \
      -F token=$DXB_TA_TOKEN \
      -F ref=develop \
      -F "variables[project]=$project" \
      -F "variables[browser]=$browser" \
      -F "variables[market]=$market" \
      -F "variables[smoke]=$smoke" \
      -F "variables[env]=$env" \
      -F "variables[tag]=$tag" \
      https://gitlab.com/api/v4/projects/31983248/trigger/pipeline | jq -r ".web_url"

      printf "${nc}${red} Follow next link for ${market^^} market pipeline â†‘ ${nc}"
  needs:
    job: environment_definer
    artifacts: true
  allow_failure: true

test_france:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "fr"
    smoke: "true"
    env: $env
    tag: $market

test_germany:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "de"
    smoke: "true"
    env: $env
    tag: $market

test_uk:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "uk"
    smoke: "true"
    env: $env
    tag: $market

test_norway:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "no"
    smoke: "true"
    env: $env
    tag: $market

test_austria:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "at"
    smoke: "true"
    env: $env
    tag: $market

test_finland:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "fi"
    smoke: "true"
    env: $env
    tag: $market

test_netherlands:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "nl"
    smoke: "true"
    env: $env
    tag: $market

test_italy:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "it"
    smoke: "true"
    env: $env
    tag: $market

test_turkey:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "tr"
    smoke: "true"
    env: $env
    tag: $market

test_za:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "za"
    smoke: "true"
    env: $env
    tag: $market

test_group:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "group"
    smoke: "true"
    env: $env
    tag: $market

test_spain:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "es"
    smoke: "true"
    env: $env
    tag: $market

test_portugal:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "pt"
    smoke: "true"
    env: $env
    tag: $market

test_malaysia:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "my"
    smoke: "true"
    env: $env
    tag: $market

test_indonesia:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "id"
    smoke: "true"
    env: $env
    tag: $market

test_romania:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "ro"
    smoke: "true"
    env: $env
    tag: $market

test_china:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "cn"
    smoke: "true"
    env: $env
    tag: $market

test_czechia:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "cz"
    smoke: "true"
    env: $env
    tag: $market

test_hungary:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "hu"
    smoke: "true"
    env: $env
    tag: $market

test_slovakia:
  extends: .auto_tests
  variables:
    project: "dxb-webui"
    browser: "chrome"
    market: "sk"
    smoke: "true"
    env: $env
    tag: $market
