image: node:12

stages:
  - install
  - audit
  - test
  - build
  - release
  - migration
  - package
  - deploy
  - deploy_gateway
  - dynamic_security
  - lighthouse_scan

workflow:
  rules:
    - if: "$CI_MERGE_REQUEST_LABELS =~ /.*Disable Builds.*/"
      when: never
    - when: always

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - local: "/applications/frc-website/.gitlab-ci.yml"
  - local: "/applications/dxb/.gitlab-ci.yml"
  - local: "/applications/intouch/.gitlab-ci.yml"
  - local: "/components/.gitlab-ci.yml"
  - local: "/functions/.gitlab-ci.yml"
  - remote: "https://gitlab.com/dependabot-gitlab/dependabot-standalone/-/raw/master/.gitlab-ci.yml"

default:
  cache:
    key:
      files:
        - yarn.lock
    policy: pull
    untracked: false
    paths:
      - "**/node_modules"
      - ".yarn_cache"

variables:
  FF_USE_FASTZIP: "false"
  ARTIFACT_COMPRESSION_LEVEL: fastest
  CACHE_COMPRESSION_LEVEL: fastest
  TRANSFER_METER_FREQUENCY: 5s
  NODE_OPTIONS: --max-old-space-size=2560
  POSTGRES_DB: custom_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: custom_pass
  POSTGRES_HOST_AUTH_METHOD: trust

.sast-analyzer:
  allow_failure: false
  needs: []
  cache: {}

eslint-sast:
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"

nodejs-scan-sast:
  needs:
    - install
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"

semgrep-sast:
  rules:
    # - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
    - when: never

# Shouldn't need cache, but the codeclimate checks fail due to a potential version issue
code_quality:
  stage: test
  needs:
    - install
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"

secret_detection:
  needs: []
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
  cache: {}

install:
  stage: install
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master') || $CI_COMMIT_TAG"
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn install --frozen-lockfile --check-files
  cache:
    key:
      files:
        - yarn.lock
    untracked: false
    paths:
      - "**/node_modules"
      - ".yarn_cache"
    policy: pull-push

#  https://github.com/pivotal/LicenseFinder
# Remove report arg when we want this job to fail
# Remove installing node 12 when https://github.com/pivotal/LicenseFinder/issues/812 is resolved
license_finder:
  stage: audit
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
  needs: []
  image: licensefinder/license_finder:latest
  cache: {}
  before_script:
    - source ~/.bash_profile
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - license_finder action_items --format html > license_finder_output.html
  artifacts:
    paths:
      - license_finder_output.html
    when: always

eslint:
  stage: test
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn eslint "**/*.{js,ts,tsx}"

release:
  image: node:13
  stage: release
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && ($CI_COMMIT_BRANCH == 'pre-production' || $CI_COMMIT_BRANCH == 'production')"
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - npx -p semantic-release@17.3.6 semantic-release

# Should be set as a scheduled job for cron 0 0 * * 1 (midnight every monday)
.dependabot-gitlab:
  cache: {}
