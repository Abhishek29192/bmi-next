include:
  - project: "$CI_PROJECT_NAMESPACE/gitlab-templates"
    file: "general.gitlab-ci.yml"
  - project: "$CI_PROJECT_NAMESPACE/gitlab-templates"
    file: "dependabot.gitlab-ci.yml"
  - project: "$CI_PROJECT_NAMESPACE/gitlab-templates"
    file: "yarn.gitlab-ci.yml"
  - local: "/applications/frc-website/.gitlab-ci.yml"
  - local: "/applications/dxb/.gitlab-ci.yml"
  - local: "/applications/intouch/.gitlab-ci.yml"
  - local: "/applications/redirects-website/.gitlab-ci.yml"
  - local: "/applications/redirects-website-fr-siplast/.gitlab-ci.yml"
  - local: "/applications/redirects-website-fr-monier/.gitlab-ci.yml"
  - local: "/applications/redirects-website-italy/.gitlab-ci.yml"
  - local: "/applications/redirects-website-uk-redland/.gitlab-ci.yml"
  - local: "/applications/redirects-website-uk-icopal/.gitlab-ci.yml"
  - local: "/components/.gitlab-ci.yml"

variables:
  ARTIFACT_COMPRESSION_LEVEL: fastest
  CACHE_COMPRESSION_LEVEL: fastest
  FF_USE_FASTZIP: "false"
  NODE_OPTIONS: --max-old-space-size=2560
  POSTGRES_DB: custom_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: custom_pass
  POSTGRES_HOST_AUTH_METHOD: trust
  # There are a coupld of .java files under node_modules which sometimes triggers spotbugs checks
  SAST_EXCLUDED_ANALYZERS: flawfinder spotbugs
  TRANSFER_METER_FREQUENCY: 5s

.ingore_release_mrs:
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'master' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'pre-production'"
      when: never
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'pre-production' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'"
      when: never
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'pre-production' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'production'"
      when: never
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'production' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'pre-production'"
      when: never

install_yarn:
  rules:
    - !reference [.ingore_release_mrs, rules]
    - if: !reference [.run_for_changes_on_main, rules, if]
      changes:
        - modules-sha
    - if: !reference [.run_for_changes_on_mr, rules, if]
      changes:
        - modules-sha

code_quality:
  rules:
    - !reference [.ingore_release_mrs, rules]
    - if: !reference [.run_for_changes_on_mr, rules, if]
    - if: !reference [.run_for_changes_on_main, rules, if]

eslint-sast:
  rules:
    - when: never

nodejs-scan-sast:
  rules:
    - when: never

semgrep-sast:
  rules:
    - when: never

lint_yarn:
  rules:
    - !reference [.ingore_release_mrs, rules]
    - if: !reference [.run_for_changes_on_mr, rules, if]
    - if: !reference [.run_for_changes_on_main, rules, if]

secret_detection:
  rules:
    - !reference [.ingore_release_mrs, rules]
    - if: !reference [.run_for_changes_on_mr, rules, if]
    - if: !reference [.run_for_changes_on_main, rules, if]

release:
  stage: release
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && ($CI_COMMIT_BRANCH == 'pre-production' || $CI_COMMIT_BRANCH == 'production')"
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn run semantic-release

auto_merge:
  stage: post deploy
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - .scripts/auto_merge.sh
  artifacts:
    reports:
      dotenv: post_deploy.env

open_mr_preprod_to_master:
  image: registry.gitlab.com/gitlab-automation-toolkit/gitlab-auto-mr
  stage: post deploy
  needs:
    - auto_merge
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      if [ "$PREPROD_MR" == "true" ];
        then
        gitlab_auto_mr --private-token $GITLAB_API_TOKEN --source-branch pre-production -t master -c WIP
      else
        echo "No need to open merge request for pre-production"
      fi

open_mr_prod_to_preprod_to_master:
  image: registry.gitlab.com/gitlab-automation-toolkit/gitlab-auto-mr
  stage: post deploy
  needs:
    - auto_merge
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      if [ "$PROD_MR" == "true" ];
        then
        gitlab_auto_mr --private-token $GITLAB_API_TOKEN --source-branch production -t pre-production -c WIP
        gitlab_auto_mr --private-token $GITLAB_API_TOKEN --source-branch pre-production -t master -c WIP
      else
        echo "No need to open merge request for production"
      fi
