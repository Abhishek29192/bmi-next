test_intouch_frontend:
  extends: .test_yarn_workspace
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - applications/intouch/frontend/**/*
        - components/**/*
        - libraries/**/*
        - yarn.lock
  variables:
    WORKSPACE: "@bmi/intouch-frontend"
    ROOT_DIR: "applications/intouch/frontend"

build_intouch_frontend_dev:
  extends: .build_yarn_workspace
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - applications/intouch/frontend/**/*
        - components/**/*
        - libraries/**/*
        - yarn.lock
  variables:
    WORKSPACE: "@bmi/intouch-frontend"
    ROOT_DIR: "applications/intouch/frontend"
    AUTH0_COOKIE_DOMAIN: "intouch.bmigroup.com"
  artifacts:
    untracked: false
    paths:
      - applications/intouch/frontend/.next

package_intouch_frontend_dev:
  needs:
    - job: build_intouch_frontend_dev
      artifacts: false
  cache: {}
  image: google/cloud-sdk:alpine
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:20-dind
      alias: docker
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - applications/intouch/frontend/**/*
        - components/**/*
        - libraries/**/*
        - yarn.lock
      variables:
        BMI_PROJECT: "$GCP_BMI_INTOUCH_DEV_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_DEV_SERVICEACCOUNT"
  script:
    - echo $BMI_KEY > gcloud-service-key-bmi.json
    - echo "Building and pushing image to GCP Projects $BMI_PROJECT"
    - docker build . -t eu.gcr.io/$BMI_PROJECT/intouch-frontend:$CI_COMMIT_SHORT_SHA -f applications/intouch/frontend/dockerfile --build-arg NPM_AUTH_READ_TOKEN=$NPM_AUTH_READ_TOKEN --build-arg AUTH0_COOKIE_DOMAIN=intouch.bmigroup.com
    - gcloud auth activate-service-account --key-file gcloud-service-key-bmi.json
    - gcloud auth configure-docker
    - docker push eu.gcr.io/$BMI_PROJECT/intouch-frontend:$CI_COMMIT_SHORT_SHA

deploy_intouch_frontend_to_cloudrun_bmi:
  stage: deploy
  cache: {}
  needs:
    - package_intouch_frontend_dev
    - test_intouch_frontend
  image: google/cloud-sdk
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master'"
      changes:
        - applications/intouch/frontend/**/*
      variables:
        CLOUD_RUN: "$GCP_BMI_INTOUCH_DEV_FRONTEND"
        BMI_PROJECT: "$GCP_BMI_INTOUCH_DEV_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_DEV_SERVICEACCOUNT"
  script:
    - echo $BMI_KEY > gcloud-service-key.json # Google Cloud service accounts.
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $BMI_PROJECT
    - gcloud run deploy $CLOUD_RUN --image=eu.gcr.io/$BMI_PROJECT/intouch-frontend:$CI_COMMIT_SHORT_SHA --region=europe-west3 --platform=managed
    - gcloud container images add-tag eu.gcr.io/$BMI_PROJECT/intouch-frontend:$CI_COMMIT_SHORT_SHA eu.gcr.io/$BMI_PROJECT/intouch-frontend:latest

# Run only on release branch!!
release_intouch_frontend_to_cloudrun_bmi:
  stage: deploy
  cache: {}
  image: google/cloud-sdk
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:20-dind
      alias: docker
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/qa'"
      changes:
        - applications/intouch/frontend/**/*
      variables:
        PREVIOUS_ENV_BMI_PROJECT: "$GCP_BMI_INTOUCH_DEV_PROJECT_ID"
        PREVIOUS_ENV_BMI_KEY: "$GCP_BMI_INTOUCH_DEV_SERVICEACCOUNT"
        CLOUD_RUN: "$GCP_BMI_INTOUCH_QA_FRONTEND"
        BMI_PROJECT: "$GCP_BMI_INTOUCH_QA_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_QA_SERVICEACCOUNT"
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/preprod'"
      changes:
        - applications/intouch/frontend/**/*
      variables:
        PREVIOUS_ENV_BMI_PROJECT: "$GCP_BMI_INTOUCH_QA_PROJECT_ID"
        PREVIOUS_ENV_BMI_KEY: "$GCP_BMI_INTOUCH_QA_SERVICEACCOUNT"
        CLOUD_RUN: "$GCP_BMI_INTOUCH_PREPROD_FRONTEND"
        BMI_PROJECT: "$GCP_BMI_INTOUCH_PREPROD_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_PREPROD_SERVICEACCOUNT"
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/prod'"
      changes:
        - applications/intouch/frontend/**/*
      variables:
        PREVIOUS_ENV_BMI_PROJECT: "$GCP_BMI_INTOUCH_PREPROD_PROJECT_ID"
        PREVIOUS_ENV_BMI_KEY: "$GCP_BMI_INTOUCH_PREPROD_SERVICEACCOUNT"
        CLOUD_RUN: "$GCP_BMI_INTOUCH_PROD_FRONTEND"
        BMI_PROJECT: "$GCP_BMI_INTOUCH_PROD_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_PROD_SERVICEACCOUNT"
  script:
    - echo $PREVIOUS_ENV_BMI_KEY > gcloud-service-key.json # Promoted Google Cloud service accounts to pull image
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $PREVIOUS_ENV_BMI_PROJECT
    - gcloud auth configure-docker
    - docker pull eu.gcr.io/$PREVIOUS_ENV_BMI_PROJECT/intouch-frontend:latest
    - docker tag eu.gcr.io/$PREVIOUS_ENV_BMI_PROJECT/intouch-frontend:latest eu.gcr.io/$BMI_PROJECT/intouch-frontend:latest
    - echo $BMI_KEY > gcloud-service-key.json # Google Cloud service accounts to promote
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $BMI_PROJECT
    - gcloud auth configure-docker
    - docker push eu.gcr.io/$BMI_PROJECT/intouch-frontend:latest
    - gcloud run deploy $CLOUD_RUN --image=eu.gcr.io/$BMI_PROJECT/intouch-frontend:latest --region=europe-west3 --platform=managed
