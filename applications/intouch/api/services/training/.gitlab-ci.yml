build_intouch_api_training_dev:
  stage: build
  image: google/cloud-sdk
  services:
    - docker:dind
  needs: []
  cache: {}
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - applications/intouch/api/services/training/**/*
        - libraries/**/*
        - package.json
        - "**/package.json"

  script:
    - echo $GCP_INTOUCH_REPLATFORM_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_INTOUCH_REPLATFORM_PROJECT_ID
    - gcloud builds submit . --config=applications/intouch/api/services/training/cloudbuild.build.yaml --substitutions _NPM_AUTH_READ_TOKEN=$NPM_AUTH_READ_TOKEN,_CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA

deploy_intouch_api_training_dev:
  stage: deploy
  needs:
    - job: migrate_training_db
      optional: true
    - build_intouch_api_training_dev
    # TODO: add a test step
  image: google/cloud-sdk
  services:
    - docker:dind
  cache: {}
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master'"
      changes:
        - applications/intouch/api/services/training/**/*
  script:
    - echo $GCP_INTOUCH_REPLATFORM_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_INTOUCH_REPLATFORM_PROJECT_ID
    - gcloud builds submit . --config=applications/intouch/api/services/training/cloudbuild.deploy.yaml --substitutions _DOCEBO_API_URL=$INTOUCH_DOCEBO_API_URL,_CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA
