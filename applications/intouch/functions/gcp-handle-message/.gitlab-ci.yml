build_gcp-intouch-handle-message:
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master') || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/onboarding')"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/qa')"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/preprod')"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/prod')"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
  needs: [install]
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn workspace @bmi/gcp-intouch-handle-message run build
  artifacts:
    paths:
      - applications/intouch/functions/gcp-handle-message/dist


package_gcp-intouch-handle-message:
  stage: package
  rules:
    - if: "($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master') || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/onboarding')"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/qa'"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/preprod'"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/prod'"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
  needs: [build_gcp-intouch-handle-message]
  dependencies:
    - build_gcp-intouch-handle-message
  before_script:
    - apt-get update
    - apt-get install -y zip unzip
    - mkdir -p dist/applications/intouch/functions
  script:
    - cd applications/intouch/functions/gcp-handle-message; zip -r $CI_PROJECT_DIR/dist/applications/intouch/functions/gcp-handle-message.zip package.json dist/; cd $CI_PROJECT_DIR;
  artifacts:
    paths:
      - $CI_PROJECT_DIR/dist/applications/intouch/functions


# Deploy to DD environment
deploy_gcp-intouch-handle-message:
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  stage: deploy
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/onboarding'"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
      allow_failure: true
  needs: [package_gcp-intouch-handle-message]
  dependencies:
    - package_gcp-intouch-handle-message
  before_script:
    - |
      GCP_INTOUCH_REPLATFORM_SERVICE_KEY=$GCP_INTOUCH_REPLATFORM_SERVICE_KEY
      GCP_INTOUCH_REPLATFORM_PROJECT_ID=$GCP_INTOUCH_REPLATFORM_PROJECT_ID
      GCP_INTOUCH_REPLATFORM_BUILD_STORAGE=$GCP_INTOUCH_REPLATFORM_BUILD_STORAGE

      INTOUCH_SENDGRID_API_KEY_DEV=$INTOUCH_SENDGRID_API_KEY_DEV
      INTOUCH_MAIL_FROM=$INTOUCH_MAIL_FROM
  script:
    - echo $GCP_INTOUCH_REPLATFORM_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_INTOUCH_REPLATFORM_PROJECT_ID
    - gsutil cp $CI_PROJECT_DIR/dist/applications/intouch/functions/gcp-handle-message.zip gs://$GCP_INTOUCH_REPLATFORM_BUILD_STORAGE/
    - gcloud builds submit . --config=applications/intouch/functions/gcp-handle-message/cloudbuild.yaml --substitutions _GCP_INTOUCH_REPLATFORM_BUILD_STORAGE=$GCP_INTOUCH_REPLATFORM_BUILD_STORAGE,_INTOUCH_MAIL_FROM=$INTOUCH_MAIL_FROM,_GCP_SECRET_PROJECT=$GCP_SECRET_PROJECT


# Deploy to BMI environments
deploy_gcp-intouch-handle-message_bmi:
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  stage: deploy
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master'"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
      variables:
        BMI_ENV: "dev"
        BMI_PROJECT: "$GCP_BMI_INTOUCH_DEV_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_DEV_SERVICEACCOUNT"
        BMI_BUILD_STORAGE: "$GCP_BMI_INTOUCH_DEV_BUILD_STORAGE"
        BMI_SECRET_PROJECT: "$GCP_BMI_DEV_SECRET_PROJECT"
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/qa'"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
      variables:
        BMI_ENV: "qa"
        BMI_PROJECT: "$GCP_BMI_INTOUCH_QA_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_QA_SERVICEACCOUNT"
        BMI_BUILD_STORAGE: "$GCP_BMI_INTOUCH_QA_BUILD_STORAGE"
        BMI_SECRET_PROJECT: "$GCP_BMI_QA_SECRET_PROJECT"
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/preprod'"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
      variables:
        BMI_ENV: "preprod"
        BMI_PROJECT: "$GCP_BMI_INTOUCH_PREPROD_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_PREPROD_SERVICEACCOUNT"
        BMI_BUILD_STORAGE: "$GCP_BMI_INTOUCH_PREPROD_BUILD_STORAGE"
        BMI_SECRET_PROJECT: "$GCP_BMI_PREPROD_SECRET_PROJECT"
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'intouch/environment/prod'"
      changes:
        - applications/intouch/functions/gcp-handle-message/**/*
      variables:
        BMI_ENV: "prod"
        BMI_PROJECT: "$GCP_BMI_INTOUCH_PROD_PROJECT_ID"
        BMI_KEY: "$GCP_BMI_INTOUCH_PROD_SERVICEACCOUNT"
        BMI_BUILD_STORAGE: "$GCP_BMI_INTOUCH_PROD_BUILD_STORAGE"
        BMI_SECRET_PROJECT: "$GCP_BMI_PROD_SECRET_PROJECT"
      allow_failure: true
  needs: [package_gcp-intouch-handle-message]
  dependencies:
    - package_gcp-intouch-handle-message
  before_script:
    - |
      GCP_INTOUCH_REPLATFORM_PROJECT_ID=$BMI_PROJECT
      GCP_INTOUCH_REPLATFORM_SERVICE_KEY=$BMI_KEY
      GCP_INTOUCH_REPLATFORM_BUILD_STORAGE=$BMI_BUILD_STORAGE
      GCP_SECRET_PROJECT=$BMI_SECRET_PROJECT
      GCP_BMI_INTOUCH_TRANSACTIONAL_TOPIC=$GCP_BMI_INTOUCH_TRANSACTIONAL_TOPIC

      INTOUCH_MAIL_FROM=$INTOUCH_MAIL_FROM
  script:
    - echo $GCP_INTOUCH_REPLATFORM_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_INTOUCH_REPLATFORM_PROJECT_ID
    - gsutil cp $CI_PROJECT_DIR/dist/applications/intouch/functions/gcp-handle-message.zip gs://$GCP_INTOUCH_REPLATFORM_BUILD_STORAGE/
    - gcloud functions deploy pubsub-handle-message --source=gs://${_GCP_INTOUCH_REPLATFORM_BUILD_STORAGE}/gcp-handle-message.zip --runtime=nodejs14 --region=europe-west3 --entry-point=emailSender --trigger-topic=$GCP_BMI_INTOUCH_TRANSACTIONAL_TOPIC-$BMI_ENV --set-env-vars=GCP_SECRET_PROJECT=${_GCP_SECRET_PROJECT},MAIL_FROM=${_INTOUCH_MAIL_FROM}
