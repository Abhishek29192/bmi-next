include:
  - local: "/applications/dxb/functions/es-pim-products-ingest/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-apsis-integration/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-build-trigger/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-download-zip/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-es-proxy/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-firestore-writer/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-form-submit/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-pim-full-fetch/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-pim-message-handler/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-system-configurator/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-update-webtools-bucket/.gitlab-ci.yml"
  - local: "/applications/dxb/functions/gcp-upload-file/.gitlab-ci.yml"

##############################################################################
# Template to build the function
# Extending job needs to provide PROJECT_NAME
#
# For example:
# variables:
#   PROJECT_NAME: gcp-upload-file
##############################################################################
.build_function:
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master') || $CI_COMMIT_TAG"
      changes:
        - applications/dxb/functions/$PROJECT_NAME/**/*
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn workspace @bmi/${PROJECT_NAME} build -p tsconfig.build.json
  artifacts:
    paths:
      - applications/dxb/functions/$PROJECT_NAME/dist

##############################################################################
# Template to package the function.
# Extending job needs to provide PROJECT_NAME, needs and variables
#
# For example:
# needs:
#   - build_gcp-upload-file
# dependencies:
#   - build_gcp-upload-file
# variables:
#   PROJECT_NAME: gcp-upload-file
##############################################################################
.package_function:
  stage: package
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master") || $CI_COMMIT_TAG'
      changes:
        - applications/dxb/functions/$PROJECT_NAME/**/*
  before_script:
    - apt-get update
    - apt-get install -y zip unzip
    - mkdir -p dist/functions
  script:
    - cd applications/dxb/functions/${PROJECT_NAME}
    - cp ../../../../yarn.lock .
    - zip -r $CI_PROJECT_DIR/dist/functions/${PROJECT_NAME}.zip package.json yarn.lock dist/
    - cd $CI_PROJECT_DIR
  artifacts:
    paths:
      - $CI_PROJECT_DIR/dist/functions

##############################################################################
# Template to deploy to QA or Pre-Production or Production Storage
# Extending job needs to provide PROJECT_NAME, needs and variables
#
# For example:
# needs:
#   - package_gcp-upload-file
# dependencies:
#   - package_gcp-upload-file
# variables:
#   PROJECT_NAME: gcp-upload-file
##############################################################################
.deploy_function:
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  stage: deploy
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master") || $CI_COMMIT_TAG'
      changes:
        - applications/dxb/functions/$PROJECT_NAME/**/*
  allow_failure: true
  before_script:
    - |
      if [ "$CI_COMMIT_BRANCH" == "master" ]; then
        GCP_FUNCTIONS_CI=$GCP_FUNCTIONS_CI_QA
      fi
          
      if [[ "$CI_COMMIT_TAG" =~ $DXB_RELEASE_TAG_FORMAT_PREPROD ]]; then
        GCP_FUNCTIONS_CI=$GCP_FUNCTIONS_CI_PREPROD
      fi

      if [[ "$CI_COMMIT_TAG" =~ $DXB_RELEASE_TAG_FORMAT_PROD ]]; then
        GCP_FUNCTIONS_CI=$GCP_FUNCTIONS_CI_PROD
      fi

      apt-get update
      apt-get install -y jq
  script:
    - ./scripts/deploy_function_package.sh $GCP_FUNCTIONS_CI ${PROJECT_NAME}
