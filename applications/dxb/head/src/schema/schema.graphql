"""
Represents an interface for inputs.
"""
interface ContentfulFormInputs implements Node {
  id: ID!

  "The name for this input."
  name: String

  "The type for this input."
  type: String

  "The label for this input."
  label: String

  "The width for this input."
  width: String

  "Should this input be required."
  required: Boolean

  "The options for this input."
  options: String

  "The permitted file types for upload."
  accept: String

  "The maximum file size for upload."
  maxSize: Int
}

"""
Represents a form section inputs consent type, implements ContentfulFormInputs.
"""
type contentfulFormSectionInputsJsonNode implements ContentfulFormInputs & Node {
  id: ID!

  "The name for this input."
  name: String

  "The type for this input."
  type: String

  "The label for this input."
  label: String

  "The width for this input."
  width: String

  "Should this input be required."
  required: Boolean

  "The options for this input."
  options: String

  "The permitted file types for upload."
  accept: String

  "The maximum file size for upload."
  maxSize: Int
}

"""
Represents a input banner inputs consent type, implements ContentfulFormInputs.
"""
type contentfulInputBannerAdditionalInputsJsonNode implements ContentfulFormInputs & Node {
  id: ID!

  "The name for this input."
  name: String

  "The type for this input."
  type: String

  "The label for this input."
  label: String

  "The width for this input."
  width: String

  "Should this input be required."
  required: Boolean

  "The options for this input."
  options: String

  "The permitted file types for upload."
  accept: String

  "The maximum file size for upload."
  maxSize: Int
}

"""
Represents common properties across pages.
"""
interface ContentfulPage implements Node {
  id: ID!

  "Contentful content entry ID."
  contentful_id: String!

  "The name of this page, representative of the type."
  title: String

  "The url for this page, devoid of any prefix."
  slug: String!

  "The full path for this page, devoid of any prefix."
  path: String!

  "The breadcrumb items for this page, devoid of any prefix."
  breadcrumbs: JSON

  "The brand logo for this page."
  brandLogo: String

  "The short description for this page."
  subtitle: String

  "The main image of this page. Can be used when referencing this page."
  featuredMedia: ContentfulImage @link(by: "id", from: "featuredMedia___NODE")

  "The featured Video"
  featuredVideo: ContentfulVideo @link(from: "featuredVideo___NODE")

  "The input banner for this page."
  inputBanner: ContentfulInputBanner @link(from: "inputBanner___NODE")

  "Tags for the page"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "SEO content"
  seo: ContentfulSeoContent @link(from: "seo___NODE")
}

type FilterOption {
  "Localised label visible in the UI."
  label: String!

  "Value of this option."
  value: String!
}

"""
Represents values available to filter products by.
"""
type Filter {
  "Localised label visible in the UI."
  label: String!

  "Programatic name of the filter."
  name: String!

  "Available filter options."
  options: [FilterOption]!
}

"""
Represents a simple page type, implementing ContentfulPage.
"""
type ContentfulSimplePage implements ContentfulPage & Node {
  id: ID!

  "Contentful content entry ID."
  contentful_id: String!

  "The name of this page, representative of the type."
  title: String

  "The url for this page, devoid of any prefix."
  slug: String!

  "The full path for this page, devoid of any prefix."
  path: String!

  "The breadcrumb items for this page, devoid of any prefix."
  breadcrumbs: JSON

  "The brand logo for this page."
  brandLogo: String

  "The short description for this page."
  subtitle: String

  "The type of hero to use."
  heroType: String

  "The main image of this page. Can be used when referencing this page."
  featuredMedia: ContentfulImage @link(by: "id", from: "featuredMedia___NODE")

  "The input banner for this page."
  inputBanner: ContentfulInputBanner @link(from: "inputBanner___NODE")

  "The input banner for this page."
  shareWidget: ContentfulShareWidgetSection @link(from: "shareWidget___NODE")

  "Tags for the page"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "The next best actions for this page."
  nextBestActions: [ContentfulPromoOrPage] @link(from: "nextBestActions___NODE")

  "The explore bar for this page."
  exploreBar: ContentfulNavigation @link(from: "exploreBar___NODE")

  "The link column section for this page."
  linkColumns: ContentfulLinkColumnsSection @link(from: "linkColumns___NODE")

  "The introudction block for this page."
  leadBlock: ContentfulLeadBlockSection @link(from: "leadBlock___NODE")

  "The date for the page entry."
  date: String

  "The sections for this page."
  sections: [ContentfulSection] @link(from: "sections___NODE")

  "The parent page of this page."
  parentPage: LinkedPage @link(from: "parentPage___NODE")

  "SEO content"
  seo: ContentfulSeoContent @link(from: "seo___NODE")

  "The featured Video"
  featuredVideo: ContentfulVideo @link(from: "featuredVideo___NODE")

  "The CTA link for this page."
  cta: ContentfulLink @link(from: "cta___NODE")
}

"""
Represents a contact us page, implementing ContentfulPage.
"""
type ContentfulContactUsPage implements ContentfulPage & Node {
  id: ID!

  "Contentful content entry ID."
  contentful_id: String!

  "The name of this page, representative of the type."
  title: String

  "The url for this page, devoid of any prefix."
  slug: String!

  "The full path for this page, devoid of any prefix."
  path: String!

  "The breadcrumb items for this page, devoid of any prefix."
  breadcrumbs: JSON

  "This field will always return null."
  brandLogo: String

  "The short description for this page."
  subtitle: String

  "The main image of this page. Can be used when referencing this page."
  featuredMedia: ContentfulImage @link(by: "id", from: "featuredMedia___NODE")

  "The featured Video"
  featuredVideo: ContentfulVideo @link(from: "featuredVideo___NODE")

  "The input banner for this page."
  inputBanner: ContentfulInputBanner @link(from: "inputBanner___NODE")

  "Tags for the page"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "The title for the query section for this page."
  queriesTitle: String

  "The subtitle for the query section for this page."
  queriesSubtitle: String

  "The title for the locations section."
  locationsTitle: String

  "The contact details for the locations section."
  locations: [ContentfulContactDetails] @link(from: "locations___NODE")

  "The iframe content"
  iframe: ContentfulIframe @link(from: "iframe___NODE")

  "The sections for this contact us page."
  sections: [ContentfulSection] @link(from: "sections___NODE")

  "The topics for this page."
  contentTopics: [ContentfulContactTopic] @link(from: "contentTopics___NODE")

  "The next best actions for this page."
  nextBestActions: [ContentfulPromoOrPage] @link(from: "nextBestActions___NODE")

  "The parent page of this page."
  parentPage: LinkedPage @link(from: "parentPage___NODE")

  "SEO content"
  seo: ContentfulSeoContent @link(from: "seo___NODE")
}

"""
Represents a team page, implementing ContentfulPage.
"""
type ContentfulTeamPage implements ContentfulPage & Node {
  id: ID!

  "Contentful content entry ID."
  contentful_id: String!

  "The name of this page, representative of the type."
  title: String

  "The url for this page, devoid of any prefix."
  slug: String!

  "The full path for this page, devoid of any prefix."
  path: String!

  "The breadcrumb items for this page, devoid of any prefix."
  breadcrumbs: JSON

  "The brand logo for this page."
  brandLogo: String

  "This field will always return null."
  subtitle: String

  "The main image of this page. Can be used when referencing this page."
  featuredMedia: ContentfulImage @link(by: "id", from: "featuredMedia___NODE")

  "The featured Video"
  featuredVideo: ContentfulVideo @link(from: "featuredVideo___NODE")

  "The input banner for this page."
  inputBanner: ContentfulInputBanner @link(from: "inputBanner___NODE")

  "Tags for the page"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "The team categories for this page."
  teamCategories: [ContentfulTeamCategory] @link(from: "teamCategories___NODE")

  "The parent page of this page."
  parentPage: LinkedPage @link(from: "parentPage___NODE")

  "SEO content"
  seo: ContentfulSeoContent @link(from: "seo___NODE")
}

type ContentfulHomePage implements Node {
  id: ID!

  "Contentful content entry ID."
  contentful_id: String!

  "The title for this home page."
  title: String

  "The url for this page, devoid of any prefix."
  slug: String!

  "The full path for this page, devoid of any prefix."
  path: String!

  "The breadcrumb items for this page, devoid of any prefix."
  breadcrumbs: JSON

  "Brands for Homepage"
  brands: [ContentfulBrandLandingPage]! @link(from: "brands___NODE")

  "The slides for this home page."
  slides: [ContentfulPromoOrPage] @link(from: "slides___NODE")

  "The main links for this home page."
  overlapCards: [ContentfulPromoOrPage] @link(from: "overlapCards___NODE")

  "The sections for this home page."
  sections: [ContentfulSection] @link(from: "sections___NODE")

  "Tags for the page"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "The input banner for this home page."
  inputBanner: ContentfulInputBanner @link(from: "inputBanner___NODE")

  "SEO content"
  seo: ContentfulSeoContent @link(from: "seo___NODE")
}

"""
Represents a product lister page, implementing ContentfulPage.
"""
type ContentfulProductListerPage implements ContentfulPage & Node {
  id: ID!

  "Contentful content entry ID."
  contentful_id: String!

  "The name of this page, representative of the type."
  title: String

  "The url for this page, devoid of any prefix."
  slug: String!

  "The full path for this page, devoid of any prefix."
  path: String!

  "The breadcrumb items for this page, devoid of any prefix."
  breadcrumbs: JSON

  "This field will always return null."
  brandLogo: String

  "The description for this category."
  content: ContentfulRichText

  "The features for this category."
  features: [String]

  "The link for extra information about this category's features."
  featuresLink: ContentfulLink @link(from: "featuresLink___NODE")

  "This field will always return null."
  subtitle: String

  "The main image of this page. Can be used when referencing this page."
  featuredMedia: ContentfulImage @link(by: "id", from: "featuredMedia___NODE")

  "The featured Video"
  featuredVideo: ContentfulVideo @link(from: "featuredVideo___NODE")

  "The input banner for this page."
  inputBanner: ContentfulInputBanner @link(from: "inputBanner___NODE")

  "Tags for the page"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "The parent page of this page."
  parentPage: LinkedPage @link(from: "parentPage___NODE")

  "SEO content"
  seo: ContentfulSeoContent @link(from: "seo___NODE")

  "CTA"
  cta: ContentfulLink @link(from: "cta___NODE")

  "The type of hero to use."
  heroType: String

  "The PIM categories this page is attached to."
  categoryCodes: [String!]
}

"""
Represents a combination of Title, Description, Image, and Link combination.
"""
type ContentfulPromo implements Node {
  "The display name of this promo."
  name: String

  "The title of this promo."
  title: String

  "The image for this promo."
  featuredMedia: ContentfulImage @link(by: "id", from: "featuredMedia___NODE")

  "The Brand logo for this promo."
  brandLogo: String

  "The subtitle for this promo."
  subtitle: String

  "The body for this promo."
  body: ContentfulRichText

  "Tags for this promo"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "The link for this promo."
  cta: ContentfulLink @link(from: "cta___NODE")

  "The featured Video"
  featuredVideo: ContentfulVideo @link(from: "featuredVideo___NODE")

  "The background colour"
  backgroundColor: String
}

"""
Represents a tag that group pages in a category
"""
type ContentfulTag implements Node {
  id: ID!

  "The title should always be required."
  title: String!

  "The type for this tag."
  type: String!
}

"""
Represents a union for a combination of promo or pages.
"""
union ContentfulPromoOrPage =
    ContentfulPromo
  | ContentfulContactUsPage
  | ContentfulSimplePage
  | ContentfulTeamPage
  | ContentfulProductListerPage
  | ContentfulDocumentLibraryPage

union ContentfulRichTextReference =
    ContentfulAsset
  | ContentfulTable
  | ContentfulLink
  | ContentfulHomePage
  | ContentfulContactUsPage
  | ContentfulSimplePage
  | ContentfulTeamPage
  | ContentfulProductListerPage
  | ContentfulDocumentLibraryPage

"""
Represents a lead block section post it card type.
"""
type ContentfulRichText implements Node {
  id: ID!

  "The raw JSON string."
  raw: String!

  references: [ContentfulRichTextReference] @link(from: "references___NODE")
}

"""
Represents a collection of pages or promos.
"""
type ContentfulCardCollectionSection implements Node {
  id: ID!

  "The title for this section."
  title: String

  "The description for this section."
  description: ContentfulRichText

  "The type of card for this section."
  cardType: String!

  "The text that should be used as card link label."
  cardLabel: String

  "The section should be grouped in categories."
  groupCards: Boolean

  "The link for this section."
  link: ContentfulLink @link(from: "link___NODE")

  "The cards for this section."
  cards: [ContentfulPromoOrPage] @link(from: "cards___NODE")

  "The section should be centered."
  justifyCenter: Boolean

  "The order in which the cards should be sorted."
  sortOrder: String
}

"""
Represents a carousel section.
"""
type ContentfulCarouselSection implements Node {
  id: ID!

  "The title for this section."
  title: String

  "The description for this section."
  description: ContentfulRichText

  "The variant of carousel to be used."
  variant: String!

  "The slides for this carousel."
  slides: [ContentfulPromoOrPage] @link(from: "slides___NODE")

  "The link for this section."
  link: ContentfulLink @link(from: "link___NODE")
}

"""
Represents a form.
"""
type ContentfulFormSection implements Node {
  id: ID!

  "The title for this form."
  title: String

  "The title is visible."
  showTitle: Boolean

  "The title for this form."
  description: ContentfulRichText

  "The recipients of this form."
  recipients: String

  "JSON representation of the form inputs."
  inputs: [ContentfulFormInputs] @link(from: "inputs___NODE")

  "The submit button text."
  submitText: String

  "The redirect page on submission success."
  successRedirect: ContentfulLink @link(from: "successRedirect___NODE")

  "HubSpot form ID"
  hubSpotFormGuid: String
}

"""
Represents a widget for social sharing.
"""
type ContentfulShareWidgetSection implements Node {
  id: ID!

  "The title of the share."
  title: String

  "The message for the share."
  message: String

  "Message shown when url is saved to the clipboard"
  clipboardSuccessMessage: String

  "Message shown in the even of an error when copying to the cliboard"
  clipboardErrorMessage: String

  "The widget is aligned to the left"
  isLeftAligned: Boolean

  "The copy functionality is shown"
  copy: Boolean

  "The email functionality is shown"
  email: Boolean

  "The Facebook share functionality is shown"
  facebook: Boolean

  "The LinkedIn share functionality is shown"
  linkedin: Boolean

  "The Pinterest share functionality is shown"
  pinterest: Boolean

  "The Twitter share functionality is shown"
  twitter: Boolean
}

"""
Represents an introduction to a page.
"""
type ContentfulLeadBlockSection implements Node {
  "The title for this section."
  title: String

  "The description for this section."
  text: ContentfulRichText

  "The link for this section, if present."
  link: ContentfulLink @link(from: "link___NODE")

  "The post it card content for this section, if present."
  postItCard: ContentfulRichText
}

"""
Represents a syndicate section (many villains).
Renamed from ContentfulVillainSection.
"""
type ContentfulSyndicateSection implements Node {
  id: ID!

  "The title for this section."
  title: String

  "The villains for this section."
  villains: [ContentfulPromoOrPage] @link(from: "villains___NODE")

  "Starting villain content ordering"
  isReversed: Boolean
}

"""
Represents the tabs or accordion section description field.
"""
type contentfulTabsOrAccordionSectionDescriptionTextNode implements Node {
  description: String
}

"""
Represents a section with a list of title with content.
"""
type ContentfulTabsOrAccordionSection implements Node {
  "The title for this section."
  title: String

  "The description for this section."
  description: contentfulTabsOrAccordionSectionDescriptionTextNode
    @link(from: "description___NODE")

  "The list of items for this section."
  items: [ContentfulTitleWithContent] @link(from: "items___NODE")

  "Should this section be a tabs or an accordion section."
  type: String
}

"""
Represents a section with a image gallery.
"""
type ContentfulImageGallerySection implements Node {
  id: ID!

  "The title for this section."
  title: String

  "The description for this section."
  longDescription: ContentfulRichText

  "The images for this section."
  # TODO: Check if the @link is needed.
  medias: [ContentfulImage] @link(from: "medias___NODE")
}

"""
Represents a section of downloadable document assets.
"""
type ContentfulDocumentDownloadSection implements Node {
  "The title for this section."
  title: String

  "The description for this section."
  description: ContentfulRichText

  "The documents for this section."
  documents: [ContentfulDocument] @link(from: "documents___NODE")
}

"""
Represents a section of downloadable document assets.
"""
type ContentfulServiceLocatorSection implements Node {
  "The title for this section."
  title: String

  "The label for this section."
  label: String

  "The body for this section."
  body: ContentfulRichText

  "The roofers for this section."
  roofers: [ContentfulRoofer] @link(from: "roofers___NODE")

  "The map centre for this section"
  centre: Location

  "The map zoom for this section."
  zoom: Int
}

"""
Represents an inline video section.
"""
type ContentfulVideoSection implements Node {
  "The internal nam for this section."
  name: String

  "The title for this section."
  title: String

  "The description for this section."
  description: ContentfulRichText

  "The video for this section."
  video: ContentfulVideo @link(from: "video___NODE")
}

"""
Represents the union of possible navigation entities.
"""
union ContentfulNavigationEntity =
    ContentfulNavigation
  | ContentfulNavigationItem
  | ContentfulLink

"""
Represents a navigation with a list of links.
"""
type ContentfulNavigation implements Node {
  id: ID!

  "The representative field for this navigation."
  title: String

  "The label for this field."
  label: String

  "The links/subNavigations for this navigation."
  links: [ContentfulNavigationEntity] @link(from: "links___NODE")

  "The link associated with this navigation."
  link: ContentfulLink @link(from: "link___NODE")

  "Promo for navigation."
  promos: [ContentfulPromoOrPage] @link(from: "promos___NODE")
}

"""
Represents a label or a separator item for a navigation.
"""
type ContentfulNavigationItem implements Node {
  id: ID!

  "The title for this navigation item."
  title: String

  "Should this item be a `Heading` or a `Separator`."
  type: String

  "The value, should this entity be a type `Heading`."
  value: String
}

# TODO: This is temp as it won't be necessary after Syndicate is in
type ContentfulVillainSection implements Node {
  id: ID!
  title: String
  description: String
  promo: ContentfulPromo @link(from: "promo___NODE")
}
#############

type ContentfulTitleWithContent implements Node {
  id: ID!

  "The title for this title with content."
  title: String

  "The content for this title with content."
  content: ContentfulRichText
}

"""
Represents a team member.
"""
type ContentfulTeamMember implements Node {
  id: ID!

  "The name for this member."
  name: String

  "The picture for this member."
  profileImage: ContentfulImage @link(from: "profileImage___NODE")

  "The job title for this member."
  jobTitle: String

  "The informational links for this memeber."
  links: [ContentfulLink] @link(from: "links___NODE")
}

"""
Represents a cateogry grouping team members.
"""
type ContentfulTeamCategory implements Node {
  id: ID!

  "The title for this category."
  title: String

  "The description for this category."
  description: ContentfulRichText

  "The team memebers for this category."
  team_member: [ContentfulTeamMember] @link(from: "teamMembers___NODE")
}

"""
Represents a union for all the possible sections available in a page.
"""
union ContentfulSection =
    ContentfulCardCollectionSection
  | ContentfulCarouselSection
  | ContentfulFormSection
  | ContentfulNavigation
  | ContentfulTabsOrAccordionSection
  | ContentfulSyndicateSection
  | ContentfulTitleWithContent
  | ContentfulPromo
  | ContentfulImageGallerySection
  | ContentfulDocumentDownloadSection
  | ContentfulServiceLocatorSection
  | ContentfulVideoSection
  | ContentfulIframe

"""
Represents a key value pair for UI strings.
"""
type ContentfulMicroCopy implements Node {
  "The key for this pair."
  key: String!

  "The value for this pair."
  value: String!
}

"""
Represents a list of resources for global settings.
"""
type ContentfulResources implements Node {
  "The micro copy pairs for these resources."
  microCopy: [ContentfulMicroCopy] @link(by: "id", from: "microCopy___NODE")

  "The elements for the product details page sidebar for these resources."
  pdpSidebarItems: [ContentfulTitleWithContent]
    @link(by: "id", from: "pdpSideBarItems___NODE")

  "The title for the product details page cards for these resources."
  pdpCardsTitle: String

  "The cards for the product details page for these resources."
  pdpCards: [ContentfulPromoOrPage] @link(from: "pdpCards___NODE")

  "The explore bar for the product details page for these resources."
  pdpExploreBar: ContentfulNavigation @link(from: "pdpExploreBar___NODE")

  "The share widget for the product details page for these resources."
  pdpShareWidget: ContentfulShareWidgetSection
    @link(from: "pdpShareWidget___NODE")

  "The share widget for the system details page for these resources."
  sdpShareWidget: ContentfulShareWidgetSection
    @link(from: "sdpShareWidget___NODE")

  "The lead block cta for the system details page for these resources."
  sdpLeadBlockCta: ContentfulLink @link(from: "sdpLeadBlockCta___NODE")

  "The input banner for the product details page for these resources."
  pdpInputBanner: ContentfulInputBanner @link(from: "pdpInputBanner___NODE")

  "The 404 error for these resources."
  errorFourOFour: ContentfulPromo @link(from: "errorFourOFour___NODE")

  "The general error for these resources."
  errorGeneral: ContentfulPromo @link(from: "errorGeneral___NODE")

  "The search tips for the search page."
  searchPageSearchTips: ContentfulTitleWithContent
    @link(from: "searchPageSearchTips___NODE")

  "The sidebar items for the search page."
  searchPageSidebarItems: ContentfulTitleWithContent
    @link(from: "searchPageSidebarItems___NODE")

  "The next best actions for the search page."
  searchPageNextBestActions: [ContentfulPromoOrPage]
    @link(from: "searchPageNextBestActions___NODE")

  "The explore bar for the search page."
  searchPageExploreBar: ContentfulNavigation
    @link(from: "searchPageExploreBar___NODE")

  welcomeDialogTitle: String

  welcomeDialogBody: ContentfulRichText

  welcomeDialogBrands: [String]

  "Set PIM documents' names pattern."
  productDocumentNameMap: String

  "The share widget for the visualiser for these resources."
  visualiserShareWidget: ContentfulShareWidgetSection
    @link(from: "visualiserShareWidget___NODE")

  " Language selection dialog introduction"
  countryNavigationIntroduction: ContentfulRichText
}

"""
Represents a union for a combination of contact details and title with content.
"""
union ContentfulContactDetailsOrTitleWithContent =
    ContentfulContactDetails
  | ContentfulTitleWithContent

"""
Represents a content topic.
"""
type ContentfulContactTopic implements Node {
  id: ID!

  "The icon symbol for this topic."
  icon: String

  "The title for this topic."
  title: String

  "The title of the body for this topic."
  bodyTitle: String

  "The list of helpful tips for this topic."
  bodyList: [ContentfulTitleWithContent] @link(from: "bodyList___NODE")

  "The title for the footer of this topic."
  footerTitle: String

  "The list of actions for this topic."
  footerList: [ContentfulContactDetailsOrTitleWithContent]
    @link(from: "footerList___NODE")
}

"""
Represents the input banner description field.
"""
type contentfulInputBannerDescriptionTextNode implements Node {
  description: String
}

"""
Represents input data with context.
"""
type ContentfulInputBanner implements Node {
  id: ID!

  "The title for this input banner."
  title: String

  "The description for this input banner."
  description: contentfulInputBannerDescriptionTextNode
    @link(from: "description___NODE")

  "The label for this input banner."
  inputLabel: String

  "The submit button label for this input banner."
  submitButtonLabel: String

  "The additional inputs for the banner, if needed."
  additionalInputs: [ContentfulFormInputs]
    @link(from: "additionalInputs___NODE")

  "The thank you message for the confirmation for this input banner."
  thankYouMessage: String

  "The label for the confirmation button for this banner."
  confirmationButtonLabel: String

  "The Allow Retry checkbox"
  allowRetry: String

  "The retry dialog title"
  errorTitle: String

  "The retry dialog body"
  errorBody: ContentfulRichText

  "The retry dialog confirm button label"
  retryButtonLabel: String
}

"""
Represents a site settings and its pages.
"""
type ContentfulSite implements Node {
  "The global settings for this site."
  resources: ContentfulResources @link(from: "resources___NODE")

  "head script tags for this Site."
  headScripts: contentfulSiteHeadScriptsTextNode
    @link(from: "headScripts___NODE")

  "Google Analitycs integration ID"
  scriptGA: String

  "OneTrust integration ID"
  scriptOnetrust: String

  "HotJar integration ID"
  scriptHotJar: String

  "Google Optimize Load balancing ID"
  scriptGOptLoad: String

  "Regions for country navigation"
  regions: [RegionJson]! @link(from: "regions___NODE")
}

"""
Represents head script tags.
"""
type contentfulSiteHeadScriptsTextNode implements Node {
  headScripts: String
}

union LinkedPage =
    ContentfulContactUsPage
  | ContentfulSimplePage
  | ContentfulTeamPage
  | ContentfulProductListerPage
  | ContentfulDocumentLibraryPage
  | ContentfulHomePage
  | ContentfulBrandLandingPage

"""
Represents a link.
"""
type ContentfulLink implements Node {
  id: ID!

  "The label for the link."
  label: String

  "The link icon."
  icon: String

  "The label is hidden for this link."
  isLabelHidden: Boolean

  "The external URL."
  url: String

  "The internal linked page."
  linkedPage: LinkedPage @link(from: "linkedPage___NODE")

  "The linked asset."
  asset: ContentfulAsset @link(by: "id", from: "asset___NODE")

  "The type of this link."
  type: String

  "The parameters used for a webtools type of link."
  parameters: contentfulLinkParametersJsonNode
    @link(by: "id", from: "parameters___NODE")

  "The query parameters for internal linked pages."
  queryParams: String

  "The content of the dialog opened by a link."
  dialogContent: ContentfulSection @link(from: "dialogContent___NODE")

  "The ID of a HubSpot CTA if present."
  hubSpotCTAID: String
}

"""
Represents a JSON Object for the ContentfulLink parameters.
It will accepts different fields depending on the type
"""
type contentfulLinkParametersJsonNode implements Node @dontInfer {
  id: ID!

  "The tile id for this webtool."
  tileId: Int

  "The colour id for this webtool."
  colourId: Int

  "The siding id for this webtool."
  sidingId: Int

  "The viewMode for this webtool."
  viewMode: String
}

"""
Represents a collection of columns with links.
"""
type ContentfulLinkColumnsSection implements Node {
  "The title for this section."
  title: String

  "The columns for this page."
  columns: [ContentfulNavigation] @link(from: "columns___NODE")
}

"""
Represents a type of downloadable asset.
"""
type ContentfulAssetType implements Node {
  id: ID!

  "The asset type name."
  name: String

  "The asset type code."
  code: String

  "The description of this asset type."
  description: ContentfulRichText

  "The PIM code for this asset type."
  pimCode: String
}

"""
Represents a type of downloadable document.
"""
type ContentfulDocument implements Node {
  id: ID!

  "The document title."
  title: String

  "The document's corresponding asset."
  asset: ContentfulAsset @link(by: "id", from: "asset___NODE")

  "The description of this document."
  description: ContentfulRichText

  "The asset type of this document."
  assetType: ContentfulAssetType @link(from: "assetType___NODE")

  "The document brand."
  brand: String

  "The image for this document."
  image: ContentfulAsset @link(by: "id", from: "image___NODE")
}

"""
Represents a document for a PIM product.
"""
type PIMDocument implements Node {
  id: ID!

  "The title for this document."
  title: String

  "The URL for this document."
  url: String

  "The type for this document."
  assetType: ContentfulAssetType @link(from: "assetType___NODE")

  "The size for this document."
  fileSize: Int

  "The product this document belongs to."
  product: Products @link(from: "product___NODE")

  "The format for this document."
  format: String

  "The file extension for this document."
  extension: String

  "The real filename for this document."
  realFileName: String
}

"""
Represents a link document for a PIM product.
"""
type PIMLinkDocument implements Node {
  id: ID!

  "The title for this document."
  title: String

  "The URL for this document."
  url: String

  "The type for this document."
  assetType: ContentfulAssetType @link(from: "assetType___NODE")

  "The product this document belongs to."
  product: Products @link(from: "product___NODE")
}

union Document = ContentfulDocument | PIMDocument | PIMLinkDocument

"""
Represents a document library page, implementing ContentfulPage.
"""
type ContentfulDocumentLibraryPage implements ContentfulPage & Node {
  id: ID!

  "Contentful content entry ID."
  contentful_id: String!

  "The name of this page."
  title: String

  "The url for this page, devoid of any prefix."
  slug: String!

  "The full path for this page, devoid of any prefix."
  path: String!

  "The breadcrumb items for this page, devoid of any prefix."
  breadcrumbs: JSON

  "The brand logo for this page (unused)."
  brandLogo: String

  "The short description for this page."
  subtitle: String

  "The main image of this page. Can be used when referencing this page (unused)."
  featuredMedia: ContentfulImage @link(by: "id", from: "featuredMedia___NODE")

  "The featured Video"
  featuredVideo: ContentfulVideo @link(from: "featuredVideo___NODE")

  "The description for this page."
  description: ContentfulRichText

  "The data source for this page."
  source: String

  "The asset types belonging to this page."
  assetTypes: [ContentfulAssetType] @link(from: "assetTypes___NODE")

  "The type of display required for content on this page."
  resultsType: String

  "The input banner for this page."
  inputBanner: ContentfulInputBanner @link(from: "inputBanner___NODE")

  "Tags for the page"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "The documents for this page."
  documents: [Document]! @link(from: "documents___NODE")

  "The product codes specified for this page."
  pimCodes: [String]

  "The parent page of this page."
  parentPage: LinkedPage @link(from: "parentPage___NODE")

  "SEO content"
  seo: ContentfulSeoContent @link(from: "seo___NODE")
}

union ProductDocument = PIMDocument | PIMLinkDocument

type Products implements Node {
  "The documents for this product."
  documents: [ProductDocument]! @link(from: "documents___NODE")

  "The external code for this product AKA NOBB number"
  externalProductCode: String
}

type ProductsVariantOptions implements Node {
  "The external code for this product AKA NOBB number"
  externalProductCode: String

  productBenefits: [String]

  "The path for this product."
  path: String

  "The breadcrumbs for this product."
  breadcrumbs: JSON
}

"""
Represents a set of contact details.
"""
type ContentfulContactDetails implements Node {
  "The title for this contact."
  title: String

  "The address for this contact."
  address: String

  "The phone number for this contact."
  phoneNumber: String

  "The email for this contact."
  email: String

  "Supplementary information for this contact."
  otherInformation: ContentfulRichText
}

"""
Represents the Brand Landing Page description text.
"""
type contentfulBrandLandingPageDescriptionTextNode implements Node {
  description: String
}

"""
Represents a Brand Landing Page type, implementing ContentfulPage.
"""
type ContentfulBrandLandingPage implements ContentfulPage & Node {
  id: ID!

  "Contentful content entry ID."
  contentful_id: String!

  "The name of this page, representative of the type."
  title: String

  "The url for this page, devoid of any prefix."
  slug: String!

  "The full path for this page, devoid of any prefix."
  path: String!

  "The breadcrumb items for this page, devoid of any prefix."
  breadcrumbs: JSON

  "The short description for this page."
  subtitle: String

  "The description for this page."
  description: contentfulBrandLandingPageDescriptionTextNode
    @link(from: "description___NODE")

  "The brand logo for this page."
  brandLogo: String

  "The slides for this brand page."
  slides: [ContentfulPromoOrPage] @link(from: "slides___NODE")

  "The main links for this brand page."
  overlapCards: [ContentfulPromoOrPage] @link(from: "overlapCards___NODE")

  "The sections for this brand page."
  sections: [ContentfulSection] @link(from: "sections___NODE")

  "The main image of brand page. Can be used when referencing this page."
  featuredMedia: ContentfulImage @link(by: "id", from: "featuredMedia___NODE")

  "The featured Video"
  featuredVideo: ContentfulVideo @link(from: "featuredVideo___NODE")

  "The input banner for this page."
  inputBanner: ContentfulInputBanner @link(from: "inputBanner___NODE")

  "Tags for the page"
  tags: [ContentfulTag] @link(from: "tags___NODE")

  "The parent page of this page."
  parentPage: LinkedPage @link(from: "parentPage___NODE")

  "SEO content"
  seo: ContentfulSeoContent @link(from: "seo___NODE")
}

type contentfulTableDataJsonNode implements Node {
  tableData: [[String]]
}

type ContentfulTable implements Node {
  contentful_id: String!

  data: contentfulTableDataJsonNode @link(by: "id", from: "data___NODE")
}

"""
Represents the company details of a roofer.
"""
type ContentfulRoofer implements Node {
  id: ID!

  "The name for this roofer."
  name: String

  "The location for this roofer."
  location: Location

  "The address for this roofer."
  address: String

  "The phone number for this roofer."
  phone: String

  "The email address for this roofer."
  email: String

  "The URL for the website of this roofer."
  website: String

  "The type of this roofer."
  type: [String]

  "The certification level of this roofer."
  certification: String

  "The summary of this roofer."
  summary: String
}

type Location implements Node {
  "The latitude for this location."
  lat: Float!

  "The longitude for this location."
  lon: Float!
}

type ContentfulSeoContent implements Node {
  id: ID!

  "Meta title tag."
  metaTitle: String

  "Meta description tag."
  metaDescription: String
}

type VideoRatio {
  "The width of this video."
  width: Int!

  "The height of this video."
  height: Int!
}

type ContentfulVideo implements Node {
  id: ID!

  "The title for video"
  title: String!

  "The label for the video"
  label: String!

  "The sub title for the video"
  subtitle: String

  "The youtube id for the video"
  youtubeId: String!

  "The main image of this page. Can be used when referencing this page (unused)."
  previewMedia: ContentfulImage @link(by: "id", from: "previewMedia___NODE")

  "The size for this video."
  videoRatio: VideoRatio
}

type contentfulImageCaptionTextNode implements Node {
  caption: String
}

"""
Represents a focal point with the percentage of x and y.
"""
type FocalPoint {
  x: Int
  y: Int
}

"""
Represents a wrapper around the ContentfulAsset.
"""
type ContentfulImage implements Node {
  id: ID!

  "The type for this Image. Could be `Decorative` or `Descriptive`"
  type: String

  "The alternative text for this Image."
  altText: String

  "The actual Asset for this Image."
  image: ContentfulAsset @link(by: "id", from: "image___NODE")

  "The caption for this Image."
  caption: contentfulImageCaptionTextNode
    @link(by: "id", from: "caption___NODE")

  "The focal point for this Image."
  focalPoint: FocalPoint
}

type ProductsVariantOptionsClassificationsFeaturesFeatureValues implements Node {
  value: String
  code: String
}

type ContentfulIframe implements Node {
  id: ID!

  "The title for video"
  name: String

  "The label for the video"
  title: String

  "The summary for the video"
  summary: ContentfulRichText

  "URL for iframe source"
  url: String!

  "iframe height"
  height: String!
}

type CountryJSON {
  code: String!
  label: String!
  icon: String
}

type RegionJson implements Node @dontInfer {
  label: String!
  menu: [CountryJSON]!
}
