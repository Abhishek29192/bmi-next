// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createImageProps Gatsby Image should render the Image component if gatsbyImageData is defined 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component with 'contain' object-fit styling if size is defined as 'contain' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: contain; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component with 'cover' object-fit styling if size is defined as 'cover' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component with a custom classname when defined 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained custom-classname"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component with the 'contain' object-fit styling if size is defined as 'Descriptive' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: contain; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component with the 'cover' object-fit styling if size is defined as 'Decorative' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's loading property with 'eager' when the loading prop is 'eager' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        sizes="(min-width: 948px) 948px, 100vw"
        srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        decoding="async"
        draggable="false"
        loading="eager"
        sizes="(min-width: 948px) 948px, 100vw"
        src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's loading property with lazy when the loading prop is 'lazy' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to 'center' when focalPoint is defined and size is contain' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: contain; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to 'center' when focalPoint is null and size is cover' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to 'center' when focalPoint is undefined and size is contain' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to 'center' when focalPoint is undefined and size is cover' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to 'center' when isMobile is false' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to 'center' when isMobile is true' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to 'center' when position is an empty string' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: center; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to the focalPoint percentages when focalPoint is defined and size is cover' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: 10% 20%; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps Gatsby Image should render the Image component's object-position styling value equal to the position prop value when defined' 1`] = `
<div>
  <div
    class="gatsby-image-wrapper gatsby-image-wrapper-constrained"
    data-gatsby-image-wrapper=""
    style="position: relative; overflow: hidden; display: inline-block; vertical-align: top;"
  >
    <div
      style="max-width: 948px; display: block;"
    >
      <img
        alt=""
        aria-hidden="true"
        role="presentation"
        src="data:image/svg+xml;charset=utf-8,%3Csvg%20height='720'%20width='948'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E"
        style="max-width: 100%; display: block; position: static;"
      />
    </div>
    <div
      aria-hidden="true"
      data-placeholder-image=""
      style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"
    />
    <picture>
      <source
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=webp 948w"
        sizes="(min-width: 948px) 948px, 100vw"
        type="image/webp"
      />
      <img
        alt="Image alt text"
        data-gatsby-image-ssr=""
        data-main-image=""
        data-src="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png"
        data-srcset="//images.ctfassets.net/18fop5x17y3g/6GSQdvd6U3Gzt6Lh7eNaBR/4d364fe9edaf47c271cdcd6034a7ec28/demo-house.png?w=948&h=720&q=50&fm=png 948w"
        decoding="async"
        draggable="false"
        loading="lazy"
        sizes="(min-width: 948px) 948px, 100vw"
        style="height: 100%; left: 0px; position: absolute; top: 0px; transform: translateZ(0); transition: opacity 250ms linear; width: 100%; will-change: opacity; object-fit: cover; object-position: example-object-position-value; opacity: 0;"
      />
    </picture>
    <noscript />
    <script
      type="module"
    >
      const t="undefined"!=typeof HTMLImageElement&&"loading"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll("img[data-main-image]");for(let e of t){e.dataset.src&&(e.setAttribute("src",e.dataset.src),e.removeAttribute("data-src")),e.dataset.srcset&&(e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset"));const t=e.parentNode.querySelectorAll("source[data-srcset]");for(let e of t)e.setAttribute("srcset",e.dataset.srcset),e.removeAttribute("data-srcset");e.complete&&(e.style.opacity=1,e.parentNode.parentNode.querySelector("[data-placeholder-image]").style.opacity=0)}}
    </script>
  </div>
</div>
`;

exports[`createImageProps HTML Image should add a classname if defined 1`] = `
<div>
  <img
    alt="Image alt text"
    class="custom-classname"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should add a loading attribute to the image component if loading === 'eager' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="eager"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should add a loading attribute to the image component if loading === 'lazy' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should have an object-position property equal to 'center' if focal point is defined and size is undefined 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should have an object-position style value of 'center' if isMobile is false 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should have an object-position style value of 'center' if isMobile is true 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should have an object-position style value of 'center' if position is an empty string 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should have an object-position styling value equal to 'center' if focal point is defined and size is 'contain' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: contain; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should have an object-position styling value equal to the focalpoint percentages if focal point is defined and size is 'cover' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: 10% 20%;"
  />
</div>
`;

exports[`createImageProps HTML Image should have an object-position styling value of 'center' if focal point is null and size === 'cover' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should have an object-position styling value of 'center' if focal point is undefined and size === 'cover' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should render a HTML image element when gatsbyImageData is not defined 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="eager"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should render the Image component with 'contain' object-fit styling if size is defined as 'contain' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: contain; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should render the Image component with 'cover' object-fit styling if size is defined as 'cover' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should render the Image component with the 'contain' object-fit styling if size is defined as 'Descriptive' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: contain; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should render the Image component with the 'cover' object-fit styling if size is defined as 'Decorative' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: center;"
  />
</div>
`;

exports[`createImageProps HTML Image should render the Image component's object-position styling value equal to the position prop value when defined' 1`] = `
<div>
  <img
    alt="Image alt text"
    loading="lazy"
    src="http://localhost:8080/custom-image.jpg"
    style="object-fit: cover; object-position: example-position;"
  />
</div>
`;
