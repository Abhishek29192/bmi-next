image: node:12

test_gcp-upload-file:
  stage: test
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_BRANCH == 'master'"
  needs: [install]
  before_script:
    - '[[ "$(scripts/ignore_build.sh functions/gcp-upload-file jest)" == "true" ]] && exit 0 || echo "Running job"'
    - yarn config set cache-folder ~/.yarn
  script:
    - yarn workspace @bmi/gcp-upload-file coverage:jest

build_gcp-upload-file:
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_BRANCH == 'master'"
  needs: [install]
  before_script:
    - '[[ "$(scripts/ignore_build.sh functions/gcp-upload-file)" == "true" ]] && exit 0 || echo "Running job"'
    - yarn config set cache-folder ~/.yarn
  script:
    - yarn workspace @bmi/gcp-upload-file build
  artifacts:
    paths:
      - functions/gcp-upload-file/dist

package_gcp-upload-file:
  stage: package
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG'
  needs: [build_gcp-upload-file]
  dependencies:
    - build_gcp-upload-file
  before_script:
    - '[[ "$(scripts/ignore_build.sh functions/gcp-upload-file)" == "true" ]] && exit 0 || echo "Running job"'
    - apt-get update
    - apt-get install -y zip unzip
    - mkdir -p dist/functions
  script:
    - cd functions/gcp-upload-file; zip -r $CI_PROJECT_DIR/dist/functions/gcp-upload-file.zip package.json dist/; cd $CI_PROJECT_DIR;
  artifacts:
    paths:
      - $CI_PROJECT_DIR/dist/functions

# Deploy to QA or Pre-Production or Production Storage
deploy_gcp-upload-file:
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG'
      allow_failure: true
  needs: [package_gcp-upload-file]
  dependencies:
    - package_gcp-upload-file
  before_script:
    - '[[ "$(scripts/ignore_build.sh functions/gcp-upload-file)" == "true" ]] && exit 0 || echo "Running job"'
    - |
      if [ "$CI_COMMIT_BRANCH" == "master" ]; then
        GCP_DXB_SERVICE_KEY=$GCP_DXB_SERVICE_KEY_QA
        GCP_DXB_PROJECT_ID=$GCP_DXB_PROJECT_ID_QA
        GCP_DXB_BUILD_STORAGE=$GCP_DXB_BUILD_STORAGE_QA
      fi
          
      if [[ "$CI_COMMIT_TAG" =~ $DXB_RELEASE_TAG_FORMAT_PREPROD ]]; then
        GCP_DXB_SERVICE_KEY=$GCP_DXB_SERVICE_KEY_PREPROD
        GCP_DXB_PROJECT_ID=$GCP_DXB_PROJECT_ID_PREPROD
        GCP_DXB_BUILD_STORAGE=$GCP_DXB_BUILD_STORAGE_PREPROD
      fi

      if [[ "$CI_COMMIT_TAG" =~ $DXB_RELEASE_TAG_FORMAT_PROD ]]; then
        GCP_DXB_SERVICE_KEY=$GCP_DXB_SERVICE_KEY_PROD
        GCP_DXB_PROJECT_ID=$GCP_DXB_PROJECT_ID_PROD
        GCP_DXB_BUILD_STORAGE=$GCP_DXB_BUILD_STORAGE_PROD
      fi

      gcloud auth activate-service-account --key-file="$GCP_DXB_SERVICE_KEY"
      gcloud config set project $GCP_DXB_PROJECT_ID
  script:
    - gsutil cp $CI_PROJECT_DIR/dist/functions/gcp-upload-file.zip gs://$GCP_DXB_BUILD_STORAGE/sources/
