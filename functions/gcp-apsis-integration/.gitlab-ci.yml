test_gcp-apsis-integration:
  stage: test
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master')"
      changes:
        - functions/gcp-apsis-integration/**/*
        - jest/**/*
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn workspace @bmi/gcp-apsis-integration coverage:jest
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    reports:
      junit:
        - functions/gcp-apsis-integration/junit.xml

test_mr_coverage_gcp-apsis-integration:
  stage: test
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'"
      changes:
        - functions/gcp-apsis-integration/**/*
        - jest/**/*
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - git fetch origin master
    - yarn workspace @bmi/gcp-apsis-integration coverage:jest --changed-since=origin/master --coverage-threshold='{"global":{"statements":"80","branches":"80","functions":"80","lines":"80"}}'
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

build_gcp-apsis-integration:
  stage: build
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master') || $CI_COMMIT_TAG"
      changes:
        - functions/gcp-apsis-integration/**/*
  needs:
    - install
  before_script:
    - yarn config set cache-folder ${PWD}/.yarn_cache
  script:
    - yarn workspace @bmi/gcp-apsis-integration build
  artifacts:
    paths:
      - functions/gcp-apsis-integration/dist

package_gcp-apsis-integration:
  stage: package
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master") || $CI_COMMIT_TAG'
      changes:
        - functions/gcp-apsis-integration/**/*
  needs:
    - build_gcp-apsis-integration
  dependencies:
    - build_gcp-apsis-integration
  before_script:
    - apt-get update
    - apt-get install -y zip unzip
    - mkdir -p dist/functions
  script:
    - cd functions/gcp-apsis-integration
    - cp ../../yarn.lock .
    - zip -r $CI_PROJECT_DIR/dist/functions/gcp-apsis-integration.zip package.json yarn.lock dist/
    - cd $CI_PROJECT_DIR
  artifacts:
    paths:
      - $CI_PROJECT_DIR/dist/functions

# Deploy to QA or Pre-Production or Production Storage
deploy_gcp-apsis-integration:
  image: gcr.io/google.com/cloudsdktool/cloud-sdk
  stage: deploy
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master") || $CI_COMMIT_TAG'
      changes:
        - functions/gcp-apsis-integration/**/*
      allow_failure: true
  needs:
    - package_gcp-apsis-integration
  dependencies:
    - package_gcp-apsis-integration
  before_script:
    - |
      if [ "$CI_COMMIT_BRANCH" == "master" ]; then
        GCP_FUNCTIONS_CI=$GCP_FUNCTIONS_CI_QA
      fi
          
      if [[ "$CI_COMMIT_TAG" =~ $DXB_RELEASE_TAG_FORMAT_PREPROD ]]; then
        GCP_FUNCTIONS_CI=$GCP_FUNCTIONS_CI_PREPROD
      fi

      if [[ "$CI_COMMIT_TAG" =~ $DXB_RELEASE_TAG_FORMAT_PROD ]]; then
        GCP_FUNCTIONS_CI=$GCP_FUNCTIONS_CI_PROD
      fi

      apt-get update
      apt-get install -y jq
  script:
    - ./scripts/deploy_function_package.sh $GCP_FUNCTIONS_CI gcp-apsis-integration
  interruptible: false
